@startuml Containers

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define logos https://raw.githubusercontent.com/plantuml/plantuml-stdlib/20213c1203fb21723822b8aa77a4fe49d3fc2a87/logos 
!include logos/go.puml
!include logos/postgresql.puml
!include logos/python.puml
!include logos/kafka.puml

!include clickhouse.sprite

LAYOUT_WITH_LEGEND()
title Social Network Container Diagram

Person(user, "User", "Social network user")

System_Boundary(userService, "User service") {
    Container(userSrv, "Social Network API", "REST API, Golang", "Provide user interface to singup/login", $sprite="go")
    ContainerDb(usersDb, "Users Database", "Postgresql", "Stores user credentials", $sprite="postgresql")

    Rel(userSrv, usersDb, "Reads/Writes")
}

System_Boundary(contentService, "Content service") {
    Container(contService, "Internal content service", "Golang", "Service working with posts and comments", $sprite="go")
    ContainerDb(contentDb, "Content Database", "Postgresql", "Stores posts and comments", $sprite="postgresql")
    
    Rel(contService, contentDb, "Reads/Writes")
}

System_Boundary(statisticsService, "Statistics service") {
    Container(statService, "Internal Statistics service", "Golang", "Statistics service for counting likes and views", $sprite="go")
    ContainerQueue(messageBroker, "MessageBroker", "Kafka", "Stores messages", $sprite="kafka")
    ContainerDb(interactionsDb, "Interactions Database", "Clickhouse", "Stores likes, views and performs analytics", $sprite="clickhouse_mid")

    Rel_R(statService, messageBroker, "Consume")
    Rel(statService, interactionsDb, "Reads/Writes")
}

Rel(user, userSrv, "Uses", "https")
Rel(userSrv, statService, "Uses", "gRPC")
Rel(userSrv, contService, "Uses", "gRPC")
Rel(userSrv, messageBroker, "Produce")

@enduml